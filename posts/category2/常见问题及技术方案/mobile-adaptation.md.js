webpackJsonp([1],{489:function(n,s){n.exports={content:["article",["p",["img",{title:null,src:"https://raw.githubusercontent.com/lj1530562965/lanjing-blog/master/assets/1.jpeg",alt:"\u6709\u9053\u4e91\u7b14\u8bb0"}],"\n",["img",{title:null,src:"https://raw.githubusercontent.com/lj1530562965/lanjing-blog/master/assets/2.jpg",alt:"\u6709\u9053\u4e91\u7b14\u8bb0"}]],["h3","\u89c6\u7a97 viewport"],["ul",["li",["p","\u7b80\u5355\u7684\u7406\u89e3\uff0cviewport\u662f\u4e25\u683c\u7b49\u4e8e\u6d4f\u89c8\u5668\u7684\u7a97\u53e3\u3002\u5728\u684c\u9762\u6d4f\u89c8\u5668\u4e2d\uff0cviewport\u5c31\u662f\u6d4f\u89c8\u5668\u7a97\u53e3\u7684\u5bbd\u5ea6\u9ad8\u5ea6\u3002\u4f46\u5728\u79fb\u52a8\u7aef\u8bbe\u5907\u4e0a\u5c31\u6709\u70b9\u590d\u6742\u3002\n\u79fb\u52a8\u7aef\u7684viewport\u592a\u7a84\uff0c\u4e3a\u4e86\u80fd\u66f4\u597d\u4e3aCSS\u5e03\u5c40\u670d\u52a1\uff0c\u6240\u4ee5\u63d0\u4f9b\u4e86\u4e24\u4e2aviewport:\u865a\u62df\u7684viewportvisualviewport\u548c\u5e03\u5c40\u7684viewportlayoutviewport\u3002"],["h3","\u7269\u7406\u50cf\u7d20(physical pixel)"]],["li",["p","\u7269\u7406\u50cf\u7d20\u53c8\u88ab\u79f0\u4e3a\u8bbe\u5907\u50cf\u7d20\uff0c\u4ed6\u662f\u663e\u793a\u8bbe\u5907\u4e2d\u4e00\u4e2a\u6700\u5fae\u5c0f\u7684\u7269\u7406\u90e8\u4ef6\u3002\u6bcf\u4e2a\u50cf\u7d20\u53ef\u4ee5\u6839\u636e\u64cd\u4f5c\u7cfb\u7edf\u8bbe\u7f6e\u81ea\u5df1\u7684\u989c\u8272\u548c\u4eae\u5ea6\u3002\u6b63\u662f\u8fd9\u4e9b\u8bbe\u5907\u50cf\u7d20\u7684\u5fae\u5c0f\u8ddd\u79bb\u6b3a\u9a97\u4e86\u6211\u4eec\u8089\u773c\u770b\u5230\u7684\u56fe\u50cf\u6548\u679c\u3002"],["h3","\u8bbe\u5907\u72ec\u7acb\u50cf\u7d20(density-independent pixel)"]],["li",["p","\u8bbe\u5907\u72ec\u7acb\u50cf\u7d20\u4e5f\u79f0\u4e3a\u5bc6\u5ea6\u65e0\u5173\u50cf\u7d20\uff0c\u53ef\u4ee5\u8ba4\u4e3a\u662f\u8ba1\u7b97\u673a\u5750\u6807\u7cfb\u7edf\u4e2d\u7684\u4e00\u4e2a\u70b9\uff0c\u8fd9\u4e2a\u70b9\u4ee3\u8868\u4e00\u4e2a\u53ef\u4ee5\u7531\u7a0b\u5e8f\u4f7f\u7528\u7684\u865a\u62df\u50cf\u7d20(\u6bd4\u5982\u8bf4CSS\u50cf\u7d20)\uff0c\u7136\u540e\u7531\u76f8\u5173\u7cfb\u7edf\u8f6c\u6362\u4e3a\u7269\u7406\u50cf\u7d20\u3002"],["h3","CSS\u50cf\u7d20"]],["li",["p","CSS\u50cf\u7d20\u662f\u4e00\u4e2a\u62bd\u50cf\u7684\u5355\u4f4d\uff0c\u4e3b\u8981\u4f7f\u7528\u5728\u6d4f\u89c8\u5668\u4e0a\uff0c\u7528\u6765\u7cbe\u786e\u5ea6\u91cfWeb\u9875\u9762\u4e0a\u7684\u5185\u5bb9\u3002\u4e00\u822c\u60c5\u51b5\u4e4b\u4e0b\uff0cCSS\u50cf\u7d20\u79f0\u4e3a\u4e0e\u8bbe\u5907\u65e0\u5173\u7684\u50cf\u7d20(device-independent pixel)\uff0c\u7b80\u79f0DIPs\u3002"],["h3","\u5c4f\u5e55\u5bc6\u5ea6"]],["li",["p","\u5c4f\u5e55\u5bc6\u5ea6\u662f\u6307\u4e00\u4e2a\u8bbe\u5907\u8868\u9762\u4e0a\u5b58\u5728\u7684\u50cf\u7d20\u6570\u91cf\uff0c\u5b83\u901a\u5e38\u4ee5\u6bcf\u82f1\u5bf8\u6709\u591a\u5c11\u50cf\u7d20\u6765\u8ba1\u7b97(PPI)\u3002"],["h3","\u8bbe\u5907\u50cf\u7d20\u6bd4(device pixel ratio)"]],["li",["p","\u8bbe\u5907\u50cf\u7d20\u6bd4\u7b80\u79f0\u4e3adpr\uff0c\u5176\u5b9a\u4e49\u4e86\u7269\u7406\u50cf\u7d20\u548c\u8bbe\u5907\u72ec\u7acb\u50cf\u7d20\u7684\u5bf9\u5e94\u5173\u7cfb\u3002\u5b83\u7684\u503c\u53ef\u4ee5\u6309\u4e0b\u9762\u7684\u516c\u5f0f\u8ba1\u7b97\u5f97\u5230\uff1a\n\u8bbe\u5907\u50cf\u7d20\u6bd4 \uff1d \u7269\u7406\u50cf\u7d20 / \u8bbe\u5907\u72ec\u7acb\u50cf\u7d20"]]],["p","\u5728JavaScript\u4e2d\uff0c\u53ef\u4ee5\u901a\u8fc7window.devicePixelRatio\u83b7\u53d6\u5230\u5f53\u524d\u8bbe\u5907\u7684dpr\u3002\u800c\u5728CSS\u4e2d\uff0c\u53ef\u4ee5\u901a\u8fc7-webkit-device-pixel-ratio\uff0c-webkit-min-device-pixel-ratio\u548c -webkit-max-device-pixel-ratio\u8fdb\u884c\u5a92\u4f53\u67e5\u8be2\uff0c\u5bf9\u4e0d\u540cdpr\u7684\u8bbe\u5907\uff0c\u505a\u4e00\u4e9b\u6837\u5f0f\u9002\u914d(\u8fd9\u91cc\u53ea\u9488\u5bf9webkit\u5185\u6838\u7684\u6d4f\u89c8\u5668\u548cwebview)\u3002\ndip\u6216dp,\uff08device independent pixels\uff0c\u8bbe\u5907\u72ec\u7acb\u50cf\u7d20\uff09\u4e0e\u5c4f\u5e55\u5bc6\u5ea6\u6709\u5173\u3002dip\u53ef\u4ee5\u7528\u6765\u8f85\u52a9\u533a\u5206\u89c6\u7f51\u819c\u8bbe\u5907\u8fd8\u662f\u975e\u89c6\u7f51\u819c\u8bbe\u5907\u3002\n\u4f17\u6240\u5468\u77e5\uff0ciPhone6\u7684\u8bbe\u5907\u5bbd\u5ea6\u548c\u9ad8\u5ea6\u4e3a375pt ",["em"," 667pt,\u53ef\u4ee5\u7406\u89e3\u4e3a\u8bbe\u5907\u7684\u72ec\u7acb\u50cf\u7d20\uff1b\u800c\u5176dpr\u4e3a2\uff0c\u6839\u636e\u4e0a\u9762\u516c\u5f0f\uff0c\u6211\u4eec\u53ef\u4ee5\u5f88\u8f7b\u677e\u5f97\u77e5\u5176\u7269\u7406\u50cf\u7d20\u4e3a750pt "]," 1334pt\u3002\n\u5728\u4e0d\u540c\u7684\u5c4f\u5e55\u4e0a\uff0cCSS\u50cf\u7d20\u6240\u5448\u73b0\u7684\u7269\u7406\u5c3a\u5bf8\u662f\u4e00\u81f4\u7684\uff0c\u800c\u4e0d\u540c\u7684\u662fCSS\u50cf\u7d20\u6240\u5bf9\u5e94\u7684\u7269\u7406\u50cf\u7d20\u5177\u6570\u662f\u4e0d\u4e00\u81f4\u7684\u3002\u5728\u666e\u901a\u5c4f\u5e55\u4e0b1\u4e2aCSS\u50cf\u7d20\u5bf9\u5e941\u4e2a\u7269\u7406\u50cf\u7d20\uff0c\u800c\u5728Retina\u5c4f\u5e55\u4e0b\uff0c1\u4e2aCSS\u50cf\u7d20\u5bf9\u5e94\u7684\u5374\u662f4\u4e2a\u7269\u7406\u50cf\u7d20\u3002\n\u76ee\u524dFlexible\u4f1a\u5c06\u89c6\u89c9\u7a3f\u5206\u6210100\u4efd\uff08\u4e3b\u8981\u4e3a\u4e86\u4ee5\u540e\u80fd\u66f4\u597d\u7684\u517c\u5bb9vh\u548cvw\uff09\uff0c\u800c\u6bcf\u4e00\u4efd\u88ab\u79f0\u4e3a\u4e00\u4e2a\u5355\u4f4da\u3002\u540c\u65f61rem\u5355\u4f4d\u88ab\u8ba4\u5b9a\u4e3a10a\u3002\u9488\u5bf9\u6211\u4eec\u8fd9\u4efd\u89c6\u89c9\u7a3f\u53ef\u4ee5\u8ba1\u7b97\u51fa\uff1a\n1a   = 7.5px\n1rem = 75px\n\u90a3\u4e48\u6211\u4eec\u8fd9\u4e2a\u793a\u4f8b\u7684\u7a3f\u5b50\u5c31\u5206\u6210\u4e8610a\uff0c\u4e5f\u5c31\u662f\u6574\u4e2a\u5bbd\u5ea6\u4e3a10rem\uff0chtml\u5bf9\u5e94\u7684font-size\u4e3a75px\uff1a\n\u8fd9\u6837\u4e00\u6765\uff0c\u5bf9\u4e8e\u89c6\u89c9\u7a3f\u4e0a\u7684\u5143\u7d20\u5c3a\u5bf8\u6362\u7b97\uff0c\u53ea\u9700\u8981\u539f\u59cb\u7684px\u503c\u9664\u4ee5rem\u57fa\u51c6\u503c\u5373\u53ef\u3002\u4f8b\u5982\u6b64\u4f8b\u89c6\u89c9\u7a3f\u4e2d\u7684\u56fe\u7247\uff0c\u5176\u5c3a\u5bf8\u662f176px ",["em"," 176px,\u8f6c\u6362\u6210\u4e3a2.346667rem "]," 2.346667rem\u3002"],["h3","CSSREM"],["p","\u8fdb\u5165packages\u76ee\u5f55\uff1aSublime Text -> Preferences -> Browse Packages...\u5c06 ",["a",{title:null,href:"https://github.com/flashlizi/cssrem\u5305\u653e\u5728\u8be5\u76ee\u5f55\u4e0b\uff0c\u91cd\u542fSublime"},"https://github.com/flashlizi/cssrem\u5305\u653e\u5728\u8be5\u76ee\u5f55\u4e0b\uff0c\u91cd\u542fSublime"]," Text\u3002\n\u53c2\u6570\u914d\u7f6e\u6587\u4ef6\uff1aSublime Text -> Preferences -> Package Settings -> cssrem"],["pre",{lang:null,highlighted:'{\n\t<span class="token string">"px_to_rem"</span><span class="token punctuation">:</span> <span class="token number">75</span><span class="token punctuation">,</span>\n\t<span class="token string">"max_rem_fraction_length"</span><span class="token punctuation">:</span> <span class="token number">6</span><span class="token punctuation">,</span>\n\t<span class="token string">"available_file_types"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">".css"</span><span class="token punctuation">,</span> <span class="token string">".less"</span><span class="token punctuation">,</span> <span class="token string">".sass"</span><span class="token punctuation">]</span>\n}'},["code",'{\n\t"px_to_rem": 75,\n\t"max_rem_fraction_length": 6,\n\t"available_file_types": [".css", ".less", ".sass"]\n}']],["p",["a",{title:null,href:"http://huodong.m.taobao.com/act/yibo.html"},"\u5728\u7ebf\u5b9e\u4f8b"]],["h3","flexible.js\uff08\u529f\u80fd\uff1a\u52a8\u6001\u6539\u5199",["meta"],"\u6807\u7b7e)"],["ul",["li",["p","\u7ed9html\u5143\u7d20\u6dfb\u52a0data-dpr\u5c5e\u6027\uff0c\u5e76\u4e14\u52a8\u6001\u6539\u5199data-dpr\u7684\u503c"]],["li",["p","\u7ed9html\u5143\u7d20\u6dfb\u52a0font-size\u5c5e\u6027\uff0c\u5e76\u4e14\u52a8\u6001\u6539\u5199font-size\u7684\u503c\uff09"]]],["pre",{lang:null,highlighted:'<span class="token comment" spellcheck="true">;(function(win, lib) {</span>\n    var doc <span class="token operator">=</span> win<span class="token punctuation">.</span>document<span class="token comment" spellcheck="true">;</span>\n    var docEl <span class="token operator">=</span> doc<span class="token punctuation">.</span>documentElement<span class="token comment" spellcheck="true">;</span>\n    var metaEl <span class="token operator">=</span> doc<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">\'meta[name="viewport"]\'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    var flexibleEl <span class="token operator">=</span> doc<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">\'meta[name="flexible"]\'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    var dpr <span class="token operator">=</span> <span class="token number">0</span><span class="token comment" spellcheck="true">;</span>\n    var scale <span class="token operator">=</span> <span class="token number">0</span><span class="token comment" spellcheck="true">;</span>\n    var tid<span class="token comment" spellcheck="true">;</span>\n    var flexible <span class="token operator">=</span> lib<span class="token punctuation">.</span>flexible || <span class="token punctuation">(</span>lib<span class="token punctuation">.</span>flexible <span class="token operator">=</span> {}<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>metaEl<span class="token punctuation">)</span> {\n        console<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">\'\u5c06\u6839\u636e\u5df2\u6709\u7684meta\u6807\u7b7e\u6765\u8bbe\u7f6e\u7f29\u653e\u6bd4\u4f8b\'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        var match <span class="token operator">=</span> metaEl<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">\'content\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token operator">/</span>initial\\<span class="token operator">-</span>scale<span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">[</span>\\d\\<span class="token punctuation">.</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>match<span class="token punctuation">)</span> {\n            scale <span class="token operator">=</span> <span class="token function">parseFloat</span><span class="token punctuation">(</span>match<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n            dpr <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">/</span> scale<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        }\n    } <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>flexibleEl<span class="token punctuation">)</span> {\n        var content <span class="token operator">=</span> flexibleEl<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">\'content\'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>content<span class="token punctuation">)</span> {\n            var initialDpr <span class="token operator">=</span> content<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token operator">/</span>initial\\<span class="token operator">-</span>dpr<span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">[</span>\\d\\<span class="token punctuation">.</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n            var maximumDpr <span class="token operator">=</span> content<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token operator">/</span>maximum\\<span class="token operator">-</span>dpr<span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">[</span>\\d\\<span class="token punctuation">.</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>initialDpr<span class="token punctuation">)</span> {\n                dpr <span class="token operator">=</span> <span class="token function">parseFloat</span><span class="token punctuation">(</span>initialDpr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n                scale <span class="token operator">=</span> <span class="token function">parseFloat</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">/</span> dpr<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n            }\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>maximumDpr<span class="token punctuation">)</span> {\n                dpr <span class="token operator">=</span> <span class="token function">parseFloat</span><span class="token punctuation">(</span>maximumDpr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n                scale <span class="token operator">=</span> <span class="token function">parseFloat</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">/</span> dpr<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n            }\n        }\n    }\n\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>!dpr <span class="token operator">&amp;</span><span class="token operator">&amp;</span> !scale<span class="token punctuation">)</span> {\n        var isAndroid <span class="token operator">=</span> win<span class="token punctuation">.</span>navigator<span class="token punctuation">.</span>appVersion<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token operator">/</span>android<span class="token operator">/</span>gi<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        var isIPhone <span class="token operator">=</span> win<span class="token punctuation">.</span>navigator<span class="token punctuation">.</span>appVersion<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token operator">/</span>iphone<span class="token operator">/</span>gi<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        var devicePixelRatio <span class="token operator">=</span> win<span class="token punctuation">.</span>devicePixelRatio<span class="token comment" spellcheck="true">;</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>isIPhone<span class="token punctuation">)</span> {\n            <span class="token operator">/</span><span class="token operator">/</span> iOS\u4e0b\uff0c\u5bf9\u4e8e<span class="token number">2</span>\u548c<span class="token number">3</span>\u7684\u5c4f\uff0c\u7528<span class="token number">2</span>\u500d\u7684\u65b9\u6848\uff0c\u5176\u4f59\u7684\u7528<span class="token number">1</span>\u500d\u65b9\u6848\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>devicePixelRatio <span class="token operator">>=</span> <span class="token number">3</span> <span class="token operator">&amp;</span><span class="token operator">&amp;</span> <span class="token punctuation">(</span>!dpr || dpr <span class="token operator">>=</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span> {\n                dpr <span class="token operator">=</span> <span class="token number">3</span><span class="token comment" spellcheck="true">;</span>\n            } <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>devicePixelRatio <span class="token operator">>=</span> <span class="token number">2</span> <span class="token operator">&amp;</span><span class="token operator">&amp;</span> <span class="token punctuation">(</span>!dpr || dpr <span class="token operator">>=</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>{\n                dpr <span class="token operator">=</span> <span class="token number">2</span><span class="token comment" spellcheck="true">;</span>\n            } <span class="token keyword">else</span> {\n                dpr <span class="token operator">=</span> <span class="token number">1</span><span class="token comment" spellcheck="true">;</span>\n            }\n        } <span class="token keyword">else</span> {\n            <span class="token operator">/</span><span class="token operator">/</span> \u5176\u4ed6\u8bbe\u5907\u4e0b\uff0c\u4ecd\u65e7\u4f7f\u7528<span class="token number">1</span>\u500d\u7684\u65b9\u6848\n            dpr <span class="token operator">=</span> <span class="token number">1</span><span class="token comment" spellcheck="true">;</span>\n        }\n        scale <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">/</span> dpr<span class="token comment" spellcheck="true">;</span>\n    }\n    <span class="token operator">/</span><span class="token operator">/</span>\u4e3ahtml\u6807\u7b7e\u6dfb\u52a0data<span class="token operator">-</span>dpr\u5c5e\u6027\n    docEl<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">\'data-dpr\'</span><span class="token punctuation">,</span> dpr<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>!metaEl<span class="token punctuation">)</span> {\n        metaEl <span class="token operator">=</span> doc<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">\'meta\'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        metaEl<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">\'name\'</span><span class="token punctuation">,</span> <span class="token string">\'viewport\'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        <span class="token operator">/</span><span class="token operator">/</span> \u52a8\u6001\u8bbe\u7f6emeta\n        metaEl<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">\'content\'</span><span class="token punctuation">,</span> <span class="token string">\'initial-scale=\'</span> <span class="token operator">+</span> scale <span class="token operator">+</span> <span class="token string">\', maximum-scale=\'</span> <span class="token operator">+</span> scale <span class="token operator">+</span> <span class="token string">\', minimum-scale=\'</span> <span class="token operator">+</span> scale <span class="token operator">+</span> <span class="token string">\', user-scalable=no\'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>docEl<span class="token punctuation">.</span>firstElementChild<span class="token punctuation">)</span> {\n            docEl<span class="token punctuation">.</span>firstElementChild<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>metaEl<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        } <span class="token keyword">else</span> {\n            var wrap <span class="token operator">=</span> doc<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">\'div\'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n            wrap<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>metaEl<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n            doc<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>wrap<span class="token punctuation">.</span>innerHTML<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        }\n    }\n\n    <span class="token operator">/</span><span class="token operator">/</span>\u6839\u636edpr\u548c\u7269\u7406\u50cf\u7d20\u8bbe\u7f6erem\n    function <span class="token function">refreshRem</span><span class="token punctuation">(</span><span class="token punctuation">)</span>{\n        <span class="token operator">/</span><span class="token operator">/</span><span class="token function">getBoundingClientRect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>width\u76f8\u5f53\u4e8e\u7269\u7406\u50cf\u7d20\n        var width <span class="token operator">=</span> docEl<span class="token punctuation">.</span><span class="token function">getBoundingClientRect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>width<span class="token comment" spellcheck="true">;</span>\n        <span class="token operator">/</span><span class="token operator">/</span> width <span class="token operator">/</span> dpr <span class="token operator">></span> <span class="token number">540</span>\u7b49\u4e8e\u72ec\u7acb\u50cf\u7d20\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>width <span class="token operator">/</span> dpr <span class="token operator">></span> <span class="token number">540</span><span class="token punctuation">)</span> {\n            width <span class="token operator">=</span> <span class="token number">540</span> <span class="token operator">*</span> dpr<span class="token comment" spellcheck="true">;</span>\n        }\n        var rem <span class="token operator">=</span> width <span class="token operator">/</span> <span class="token number">10</span><span class="token comment" spellcheck="true">;   // \u5c06\u5c4f\u5e55\u5bbd\u5ea6\u5206\u621010\u4efd\uff0c 1\u4efd\u4e3a1rem.  rem\u8f6c\u5316px\u8ba1\u7b97\u516c\u5f0f=d*(width/10)</span>\n        docEl<span class="token punctuation">.</span>style<span class="token punctuation">.</span>fontSize <span class="token operator">=</span> rem <span class="token operator">+</span> <span class="token string">\'px\'</span><span class="token comment" spellcheck="true">;</span>\n        flexible<span class="token punctuation">.</span>rem <span class="token operator">=</span> win<span class="token punctuation">.</span>rem <span class="token operator">=</span> rem<span class="token comment" spellcheck="true">;</span>\n    }\n    <span class="token operator">/</span><span class="token operator">/</span> \u76d1\u542c\u7a97\u53e3\u53d8\u5316\uff0c\u91cd\u65b0\u8bbe\u7f6e\u5c3a\u5bf8\n    win<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">\'resize\'</span><span class="token punctuation">,</span> <span class="token function">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> {\n        <span class="token function">clearTimeout</span><span class="token punctuation">(</span>tid<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        tid <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span>refreshRem<span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    }<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\n    <span class="token operator">/</span><span class="token operator">/</span> \u5f53\u91cd\u65b0\u8f7d\u5165\u9875\u9762\u65f6\uff0c\u5224\u65ad\u662f\u5426\u662f\u7f13\u5b58\uff0c\u5982\u679c\u662f\u7f13\u5b58\uff0c\u6267\u884c<span class="token function">refreshRem</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    win<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">\'pageshow\'</span><span class="token punctuation">,</span> <span class="token function">function</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> {\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>persisted<span class="token punctuation">)</span> {\n            <span class="token function">clearTimeout</span><span class="token punctuation">(</span>tid<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n            tid <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span>refreshRem<span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n        }\n    }<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>doc<span class="token punctuation">.</span>readyState <span class="token operator">==</span><span class="token operator">=</span> <span class="token string">\'complete\'</span><span class="token punctuation">)</span> {\n        doc<span class="token punctuation">.</span>body<span class="token punctuation">.</span>style<span class="token punctuation">.</span>fontSize <span class="token operator">=</span> <span class="token number">12</span> <span class="token operator">*</span> dpr <span class="token operator">+</span> <span class="token string">\'px\'</span><span class="token comment" spellcheck="true">;</span>\n    } <span class="token keyword">else</span> {\n        doc<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">\'DOMContentLoaded\'</span><span class="token punctuation">,</span> <span class="token function">function</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> {\n            doc<span class="token punctuation">.</span>body<span class="token punctuation">.</span>style<span class="token punctuation">.</span>fontSize <span class="token operator">=</span> <span class="token number">12</span> <span class="token operator">*</span> dpr <span class="token operator">+</span> <span class="token string">\'px\'</span><span class="token comment" spellcheck="true">;</span>\n        }<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n    }\n\n\n    <span class="token function">refreshRem</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\n    flexible<span class="token punctuation">.</span>dpr <span class="token operator">=</span> win<span class="token punctuation">.</span>dpr <span class="token operator">=</span> dpr<span class="token comment" spellcheck="true">;</span>\n    flexible<span class="token punctuation">.</span>refreshRem <span class="token operator">=</span> refreshRem<span class="token comment" spellcheck="true">;</span>\n    flexible<span class="token punctuation">.</span>rem2px <span class="token operator">=</span> <span class="token function">function</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span> {\n        var val <span class="token operator">=</span> <span class="token function">parseFloat</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span> <span class="token operator">*</span> this<span class="token punctuation">.</span>rem<span class="token comment" spellcheck="true">;</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>typeof d <span class="token operator">==</span><span class="token operator">=</span> <span class="token string">\'string\'</span> <span class="token operator">&amp;</span><span class="token operator">&amp;</span> d<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token operator">/</span>rem$<span class="token operator">/</span><span class="token punctuation">)</span><span class="token punctuation">)</span> {\n            val <span class="token operator">+=</span> <span class="token string">\'px\'</span><span class="token comment" spellcheck="true">;</span>\n        }\n        return val<span class="token comment" spellcheck="true">;</span>\n    }\n    flexible<span class="token punctuation">.</span>px2rem <span class="token operator">=</span> <span class="token function">function</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span> {\n        var val <span class="token operator">=</span> <span class="token function">parseFloat</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span> <span class="token operator">/</span> this<span class="token punctuation">.</span>rem<span class="token comment" spellcheck="true">;</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>typeof d <span class="token operator">==</span><span class="token operator">=</span> <span class="token string">\'string\'</span> <span class="token operator">&amp;</span><span class="token operator">&amp;</span> d<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token operator">/</span>px$<span class="token operator">/</span><span class="token punctuation">)</span><span class="token punctuation">)</span> {\n            val <span class="token operator">+=</span> <span class="token string">\'rem\'</span><span class="token comment" spellcheck="true">;</span>\n        }\n        return val<span class="token comment" spellcheck="true">;</span>\n    }\n\n}<span class="token punctuation">)</span><span class="token punctuation">(</span>window<span class="token punctuation">,</span> window<span class="token punctuation">[</span><span class="token string">\'lib\'</span><span class="token punctuation">]</span> || <span class="token punctuation">(</span>window<span class="token punctuation">[</span><span class="token string">\'lib\'</span><span class="token punctuation">]</span> <span class="token operator">=</span> {}<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>'},["code",";(function(win, lib) {\n    var doc = win.document;\n    var docEl = doc.documentElement;\n    var metaEl = doc.querySelector('meta[name=\"viewport\"]');\n    var flexibleEl = doc.querySelector('meta[name=\"flexible\"]');\n    var dpr = 0;\n    var scale = 0;\n    var tid;\n    var flexible = lib.flexible || (lib.flexible = {});\n\n    if (metaEl) {\n        console.warn('\u5c06\u6839\u636e\u5df2\u6709\u7684meta\u6807\u7b7e\u6765\u8bbe\u7f6e\u7f29\u653e\u6bd4\u4f8b');\n        var match = metaEl.getAttribute('content').match(/initial\\-scale=([\\d\\.]+)/);\n        if (match) {\n            scale = parseFloat(match[1]);\n            dpr = parseInt(1 / scale);\n        }\n    } else if (flexibleEl) {\n        var content = flexibleEl.getAttribute('content');\n        if (content) {\n            var initialDpr = content.match(/initial\\-dpr=([\\d\\.]+)/);\n            var maximumDpr = content.match(/maximum\\-dpr=([\\d\\.]+)/);\n            if (initialDpr) {\n                dpr = parseFloat(initialDpr[1]);\n                scale = parseFloat((1 / dpr).toFixed(2));\n            }\n            if (maximumDpr) {\n                dpr = parseFloat(maximumDpr[1]);\n                scale = parseFloat((1 / dpr).toFixed(2));\n            }\n        }\n    }\n\n    if (!dpr && !scale) {\n        var isAndroid = win.navigator.appVersion.match(/android/gi);\n        var isIPhone = win.navigator.appVersion.match(/iphone/gi);\n        var devicePixelRatio = win.devicePixelRatio;\n        if (isIPhone) {\n            // iOS\u4e0b\uff0c\u5bf9\u4e8e2\u548c3\u7684\u5c4f\uff0c\u75282\u500d\u7684\u65b9\u6848\uff0c\u5176\u4f59\u7684\u75281\u500d\u65b9\u6848\n            if (devicePixelRatio >= 3 && (!dpr || dpr >= 3)) {\n                dpr = 3;\n            } else if (devicePixelRatio >= 2 && (!dpr || dpr >= 2)){\n                dpr = 2;\n            } else {\n                dpr = 1;\n            }\n        } else {\n            // \u5176\u4ed6\u8bbe\u5907\u4e0b\uff0c\u4ecd\u65e7\u4f7f\u75281\u500d\u7684\u65b9\u6848\n            dpr = 1;\n        }\n        scale = 1 / dpr;\n    }\n    //\u4e3ahtml\u6807\u7b7e\u6dfb\u52a0data-dpr\u5c5e\u6027\n    docEl.setAttribute('data-dpr', dpr);\n    if (!metaEl) {\n        metaEl = doc.createElement('meta');\n        metaEl.setAttribute('name', 'viewport');\n        // \u52a8\u6001\u8bbe\u7f6emeta\n        metaEl.setAttribute('content', 'initial-scale=' + scale + ', maximum-scale=' + scale + ', minimum-scale=' + scale + ', user-scalable=no');\n        if (docEl.firstElementChild) {\n            docEl.firstElementChild.appendChild(metaEl);\n        } else {\n            var wrap = doc.createElement('div');\n            wrap.appendChild(metaEl);\n            doc.write(wrap.innerHTML);\n        }\n    }\n\n    //\u6839\u636edpr\u548c\u7269\u7406\u50cf\u7d20\u8bbe\u7f6erem\n    function refreshRem(){\n        //getBoundingClientRect().width\u76f8\u5f53\u4e8e\u7269\u7406\u50cf\u7d20\n        var width = docEl.getBoundingClientRect().width;\n        // width / dpr > 540\u7b49\u4e8e\u72ec\u7acb\u50cf\u7d20\n        if (width / dpr > 540) {\n            width = 540 * dpr;\n        }\n        var rem = width / 10;   // \u5c06\u5c4f\u5e55\u5bbd\u5ea6\u5206\u621010\u4efd\uff0c 1\u4efd\u4e3a1rem.  rem\u8f6c\u5316px\u8ba1\u7b97\u516c\u5f0f=d*(width/10)\n        docEl.style.fontSize = rem + 'px';\n        flexible.rem = win.rem = rem;\n    }\n    // \u76d1\u542c\u7a97\u53e3\u53d8\u5316\uff0c\u91cd\u65b0\u8bbe\u7f6e\u5c3a\u5bf8\n    win.addEventListener('resize', function() {\n        clearTimeout(tid);\n        tid = setTimeout(refreshRem, 300);\n    }, false);\n\n    // \u5f53\u91cd\u65b0\u8f7d\u5165\u9875\u9762\u65f6\uff0c\u5224\u65ad\u662f\u5426\u662f\u7f13\u5b58\uff0c\u5982\u679c\u662f\u7f13\u5b58\uff0c\u6267\u884crefreshRem()\n    win.addEventListener('pageshow', function(e) {\n        if (e.persisted) {\n            clearTimeout(tid);\n            tid = setTimeout(refreshRem, 300);\n        }\n    }, false);\n\n    if (doc.readyState === 'complete') {\n        doc.body.style.fontSize = 12 * dpr + 'px';\n    } else {\n        doc.addEventListener('DOMContentLoaded', function(e) {\n            doc.body.style.fontSize = 12 * dpr + 'px';\n        }, false);\n    }\n\n\n    refreshRem();\n\n    flexible.dpr = win.dpr = dpr;\n    flexible.refreshRem = refreshRem;\n    flexible.rem2px = function(d) {\n        var val = parseFloat(d) * this.rem;\n        if (typeof d === 'string' && d.match(/rem$/)) {\n            val += 'px';\n        }\n        return val;\n    }\n    flexible.px2rem = function(d) {\n        var val = parseFloat(d) / this.rem;\n        if (typeof d === 'string' && d.match(/px$/)) {\n            val += 'rem';\n        }\n        return val;\n    }\n\n})(window, window['lib'] || (window['lib'] = {}));"]]],meta:{title:"\u79fb\u52a8\u7aef\u9002\u914d\u65b9\u6848",publishDate:"2018-12-06T00:00:00.000Z",abstract:"\u79fb\u52a8\u7aef\u9002\u914d\u65b9\u6848",filename:"posts/category2/\u5e38\u89c1\u95ee\u9898\u53ca\u6280\u672f\u65b9\u6848/mobile-adaptation.md"}}}});