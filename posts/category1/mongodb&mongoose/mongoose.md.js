webpackJsonp([29],{464:function(n,s){n.exports={content:["article",["pre",{lang:null,highlighted:'var mongoose <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"mongoose"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\nvar db <span class="token operator">=</span> mongoose<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token string">"mongodb://127.0.0.1:27017/test"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\ndb<span class="token punctuation">.</span>connection<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">"error"</span><span class="token punctuation">,</span> function <span class="token punctuation">(</span>error<span class="token punctuation">)</span> {\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"\u6570\u636e\u5e93\u8fde\u63a5\u5931\u8d25\uff1a"</span> <span class="token operator">+</span> error<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n}<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\ndb<span class="token punctuation">.</span>connection<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">"open"</span><span class="token punctuation">,</span> function <span class="token punctuation">(</span><span class="token punctuation">)</span> {\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"------\u6570\u636e\u5e93\u8fde\u63a5\u6210\u529f\uff01------"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n}<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\nvar TestSchema <span class="token operator">=</span> new mongoose<span class="token punctuation">.</span><span class="token function">Schema</span><span class="token punctuation">(</span>{\nname <span class="token punctuation">:</span> { type<span class="token punctuation">:</span>String }<span class="token punctuation">,</span><span class="token operator">/</span><span class="token operator">/</span>\u5c5e\u6027name<span class="token punctuation">,</span>\u7c7b\u578b\u4e3aString\n    age <span class="token punctuation">:</span> { type<span class="token punctuation">:</span>Number<span class="token punctuation">,</span> <span class="token keyword">default</span><span class="token punctuation">:</span><span class="token number">0</span> }<span class="token punctuation">,</span><span class="token operator">/</span><span class="token operator">/</span>\u5c5e\u6027age<span class="token punctuation">,</span>\u7c7b\u578b\u4e3aNumber<span class="token punctuation">,</span>\u9ed8\u8ba4\u4e3a<span class="token number">0</span>\n    time <span class="token punctuation">:</span> { type<span class="token punctuation">:</span>Date<span class="token punctuation">,</span> <span class="token keyword">default</span><span class="token punctuation">:</span>Date<span class="token punctuation">.</span>now }<span class="token punctuation">,</span>\nemail<span class="token punctuation">:</span> { type<span class="token punctuation">:</span>String<span class="token punctuation">,</span><span class="token keyword">default</span><span class="token punctuation">:</span><span class="token string">\'\'</span>}\n}<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n<span class="token operator">/</span><span class="token operator">/</span> \u521b\u5efaModel\nvar TestModel <span class="token operator">=</span> db<span class="token punctuation">.</span><span class="token function">model</span><span class="token punctuation">(</span><span class="token string">"test1"</span><span class="token punctuation">,</span> TestSchema<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\nvar TestEntity <span class="token operator">=</span> new <span class="token function">TestModel</span><span class="token punctuation">(</span>{\nname <span class="token punctuation">:</span> <span class="token string">"Lenka"</span><span class="token punctuation">,</span>\nage <span class="token punctuation">:</span> <span class="token number">36</span><span class="token punctuation">,</span>\nemail<span class="token punctuation">:</span> <span class="token string">"lenka@qq.com"</span>\n}<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\nTestEntity<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token function">function</span><span class="token punctuation">(</span>error<span class="token punctuation">,</span>doc<span class="token punctuation">)</span>{\n<span class="token function">if</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>{\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"error :"</span> <span class="token operator">+</span> error<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n}<span class="token keyword">else</span>{\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>doc<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n}\n}<span class="token punctuation">)</span><span class="token comment" spellcheck="true">; </span>'},["code",'var mongoose = require("mongoose");\nvar db = mongoose.connect("mongodb://127.0.0.1:27017/test");\ndb.connection.on("error", function (error) {\nconsole.log("\u6570\u636e\u5e93\u8fde\u63a5\u5931\u8d25\uff1a" + error);\n});\ndb.connection.on("open", function () {\nconsole.log("------\u6570\u636e\u5e93\u8fde\u63a5\u6210\u529f\uff01------");\n});\nvar TestSchema = new mongoose.Schema({\nname : { type:String },//\u5c5e\u6027name,\u7c7b\u578b\u4e3aString\n    age : { type:Number, default:0 },//\u5c5e\u6027age,\u7c7b\u578b\u4e3aNumber,\u9ed8\u8ba4\u4e3a0\n    time : { type:Date, default:Date.now },\nemail: { type:String,default:\'\'}\n});\n// \u521b\u5efaModel\nvar TestModel = db.model("test1", TestSchema);\nvar TestEntity = new TestModel({\nname : "Lenka",\nage : 36,\nemail: "lenka@qq.com"\n});\nTestEntity.save(function(error,doc){\nif(error){\nconsole.log("error :" + error);\n}else{\nconsole.log(doc);\n}\n}); ']],["h3","\u67e5\u8be2\uff1aobj.find(\u67e5\u8be2\u6761\u4ef6,callback);"],["pre",{lang:null,highlighted:'TestModel<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span>{}<span class="token punctuation">,</span><span class="token function">function</span><span class="token punctuation">(</span>error<span class="token punctuation">,</span>docs<span class="token punctuation">)</span>{\n<span class="token operator">/</span><span class="token operator">/</span>\u82e5\u6ca1\u6709\u5411find\u4f20\u9012\u53c2\u6570\uff0c\u9ed8\u8ba4\u7684\u662f\u663e\u793a\u6240\u6709\u6587\u6863\n}<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n \nTestModel<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span>{ <span class="token string">"age"</span><span class="token punctuation">:</span> <span class="token number">28</span> }<span class="token punctuation">,</span> function <span class="token punctuation">(</span>error<span class="token punctuation">,</span> docs<span class="token punctuation">)</span> {\n<span class="token function">if</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>{\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"error :"</span> <span class="token operator">+</span> error<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n}<span class="token keyword">else</span>{\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>docs<span class="token punctuation">)</span><span class="token comment" spellcheck="true">; //docs: age\u4e3a28\u7684\u6240\u6709\u6587\u6863</span>\n}\n}<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>'},["code",'TestModel.find({},function(error,docs){\n//\u82e5\u6ca1\u6709\u5411find\u4f20\u9012\u53c2\u6570\uff0c\u9ed8\u8ba4\u7684\u662f\u663e\u793a\u6240\u6709\u6587\u6863\n});\n \nTestModel.find({ "age": 28 }, function (error, docs) {\nif(error){\nconsole.log("error :" + error);\n}else{\nconsole.log(docs); //docs: age\u4e3a28\u7684\u6240\u6709\u6587\u6863\n}\n});']],["h4","find \u8fc7\u6ee4\u67e5\u8be2"],["ul",["li",["p","\u5c5e\u6027\u8fc7\u6ee4 find(Conditions,field,callback);//field\u7701\u7565\u6216\u4e3aNull\uff0c\u5219\u8fd4\u56de\u6240\u6709\u5c5e\u6027\u3002"]]],["pre",{lang:null,highlighted:'<span class="token operator">/</span><span class="token operator">/</span>\u8fd4\u56de\u53ea\u5305\u542b\u4e00\u4e2a\u952e\u503cname\u3001age\u7684\u6240\u6709\u8bb0\u5f55\nTestModel<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span>{}<span class="token punctuation">,</span>{name<span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">,</span> age<span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">,</span> _id<span class="token punctuation">:</span><span class="token number">0</span>}\uff0c<span class="token function">function</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span>docs<span class="token punctuation">)</span>{\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>docs<span class="token punctuation">)</span><span class="token comment" spellcheck="true">; //docs \u67e5\u8be2\u7ed3\u679c\u96c6</span>\n}<span class="token punctuation">)</span>'},["code","//\u8fd4\u56de\u53ea\u5305\u542b\u4e00\u4e2a\u952e\u503cname\u3001age\u7684\u6240\u6709\u8bb0\u5f55\nTestModel.find({},{name:1, age:1, _id:0}\uff0cfunction(err,docs){\nconsole.log(docs); //docs \u67e5\u8be2\u7ed3\u679c\u96c6\n})"]],["p",'\u8bf4\u660e\uff1a\u6211\u4eec\u53ea\u9700\u8981\u628a\u663e\u793a\u7684\u5c5e\u6027\u8bbe\u7f6e\u4e3a\u5927\u4e8e\u96f6\u7684\u6570\u5c31\u53ef\u4ee5\uff0c\u5f53\u71361\u662f\u6700\u597d\u7406\u89e3\u7684\uff0c_id\u662f\u9ed8\u8ba4\u8fd4\u56de\uff0c\u5982\u679c\u4e0d\u8981\u663e\u793a\u52a0\u4e0a("_id":0)\uff0c\u4f46\u662f\uff0c\u5bf9\u5176\u4ed6\u4e0d\u9700\u8981\u663e\u793a\u7684\u5c5e\u6027\u4e14\u4e0d\u662f_id\uff0c\u5982\u679c\u8bbe\u7f6e\u4e3a0\u7684\u8bdd\u5c06\u4f1a\u629b\u5f02\u5e38\u6216\u67e5\u8be2\u65e0\u679c\u3002'],["h4","findOne\u67e5\u8be2"],["ul",["li",["p","\u5355\u6761\u6570\u636e findOne(Conditions,callback);//\u4e0efind\u76f8\u540c\uff0c\u4f46\u53ea\u8fd4\u56de\u5355\u4e2a\u6587\u6863\uff0c\u4e5f\u5c31\u8bf4\u5f53\u67e5\u8be2\u5230\u5373\u4e00\u4e2a\u7b26\u5408\u6761\u4ef6\u7684\u6570\u636e\u65f6\uff0c\u5c06\u505c\u6b62\u7ee7\u7eed\u67e5\u8be2\uff0c\u5e76\u8fd4\u56de\u67e5\u8be2\u7ed3\u679c"]]],["pre",{lang:null,highlighted:'TestModel<span class="token punctuation">.</span><span class="token function">findOne</span><span class="token punctuation">(</span>{ age<span class="token punctuation">:</span> <span class="token number">27</span>}<span class="token punctuation">,</span> function <span class="token punctuation">(</span>err<span class="token punctuation">,</span> doc<span class="token punctuation">)</span>{\n<span class="token operator">/</span><span class="token operator">/</span> \u67e5\u8be2\u7b26\u5408age\u7b49\u4e8e<span class="token number">27</span>\u7684\u7b2c\u4e00\u6761\u6570\u636e\n<span class="token operator">/</span><span class="token operator">/</span> doc\u662f\u67e5\u8be2\u7ed3\u679c\n}<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>'},["code","TestModel.findOne({ age: 27}, function (err, doc){\n// \u67e5\u8be2\u7b26\u5408age\u7b49\u4e8e27\u7684\u7b2c\u4e00\u6761\u6570\u636e\n// doc\u662f\u67e5\u8be2\u7ed3\u679c\n});"]],["h4","findById\u67e5\u8be2"],["ul",["li",["p","\u5355\u6761\u6570\u636e findById(_id, callback);//\u4e0efindOne\u76f8\u540c\uff0c\u4f46\u5b83\u53ea\u63a5\u6536\u6587\u6863\u7684_id\u4f5c\u4e3a\u53c2\u6570\uff0c\u8fd4\u56de\u5355\u4e2a\u6587\u6863\u3002\u540c\u6837\u662f\u5355\u6761\u6570\u636e\uff0cfindById\u548cfindOne\u8fd8\u662f\u6709\u4e9b\u533a\u522b\u7684\u3002"]]],["pre",{lang:null,highlighted:'TestModel<span class="token punctuation">.</span><span class="token function">findById</span><span class="token punctuation">(</span><span class="token string">\'obj._id\'</span><span class="token punctuation">,</span> function <span class="token punctuation">(</span>err<span class="token punctuation">,</span> doc<span class="token punctuation">)</span>{\n<span class="token operator">/</span><span class="token operator">/</span>doc \u67e5\u8be2\u7ed3\u679c\u6587\u6863\n}<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>'},["code","TestModel.findById('obj._id', function (err, doc){\n//doc \u67e5\u8be2\u7ed3\u679c\u6587\u6863\n});"]],["h4","\u5927\u4e8e\u5c0f\u4e8e\u6761\u4ef6\u7b5b\u9009\u67e5\u8be2"],["ul",["li",["p","\u67e5\u8be2\u65f6\u6211\u4eec\u7ecf\u5e38\u4f1a\u78b0\u5230\u8981\u6839\u636e\u67d0\u4e9b\u5b57\u6bb5\u8fdb\u884c\u6761\u4ef6\u7b5b\u9009\u67e5\u8be2\uff0c\u6bd4\u5982\u8bf4Number\u7c7b\u578b\uff0c\u600e\u4e48\u529e\u5462\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528$gt(>)\u3001$lt(<)\u3001$lte(<=)\u3001$gte(>=)\u64cd\u4f5c\u7b26\u8fdb\u884c\u6392\u9664\u6027\u7684\u67e5\u8be2"]]],["pre",{lang:null,highlighted:'TestModel<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span>{<span class="token string">"age"</span><span class="token punctuation">:</span>{<span class="token string">"$gt"</span><span class="token punctuation">:</span><span class="token number">18</span>}}<span class="token punctuation">,</span><span class="token function">function</span><span class="token punctuation">(</span>error<span class="token punctuation">,</span>docs<span class="token punctuation">)</span>{\n<span class="token operator">/</span><span class="token operator">/</span>\u67e5\u8be2\u6240\u6709nage\u5927\u4e8e<span class="token number">18</span>\u7684\u6570\u636e\n}<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n \nTestModel<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span>{<span class="token string">"age"</span><span class="token punctuation">:</span>{<span class="token string">"$lt"</span><span class="token punctuation">:</span><span class="token number">60</span>}}<span class="token punctuation">,</span><span class="token function">function</span><span class="token punctuation">(</span>error<span class="token punctuation">,</span>docs<span class="token punctuation">)</span>{\n<span class="token operator">/</span><span class="token operator">/</span>\u67e5\u8be2\u6240\u6709nage\u5c0f\u4e8e<span class="token number">60</span>\u7684\u6570\u636e\n}<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n \nTestModel<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span>{<span class="token string">"age"</span><span class="token punctuation">:</span>{<span class="token string">"$gt"</span><span class="token punctuation">:</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token string">"$lt"</span><span class="token punctuation">:</span><span class="token number">60</span>}}<span class="token punctuation">,</span><span class="token function">function</span><span class="token punctuation">(</span>error<span class="token punctuation">,</span>docs<span class="token punctuation">)</span>{\n<span class="token operator">/</span><span class="token operator">/</span>\u67e5\u8be2\u6240\u6709nage\u5927\u4e8e<span class="token number">18</span>\u5c0f\u4e8e<span class="token number">60</span>\u7684\u6570\u636e\n}<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>'},["code",'TestModel.find({"age":{"$gt":18}},function(error,docs){\n//\u67e5\u8be2\u6240\u6709nage\u5927\u4e8e18\u7684\u6570\u636e\n});\n \nTestModel.find({"age":{"$lt":60}},function(error,docs){\n//\u67e5\u8be2\u6240\u6709nage\u5c0f\u4e8e60\u7684\u6570\u636e\n});\n \nTestModel.find({"age":{"$gt":18,"$lt":60}},function(error,docs){\n//\u67e5\u8be2\u6240\u6709nage\u5927\u4e8e18\u5c0f\u4e8e60\u7684\u6570\u636e\n});']],["h4","\u4e0d\u5339\u914d\u6761\u4ef6\u7b5b\u9009\u67e5\u8be2"],["ul",["li",["p","$ne(!=)\u64cd\u4f5c\u7b26\u7684\u542b\u4e49\u76f8\u5f53\u4e8e\u4e0d\u7b49\u4e8e\u3001\u4e0d\u5305\u542b\uff0c\u67e5\u8be2\u65f6\u6211\u4eec\u53ef\u901a\u8fc7\u5b83\u8fdb\u884c\u6761\u4ef6\u5224\u5b9a,$ne\u53ef\u4ee5\u5339\u914d\u5355\u4e2a\u503c\uff0c\u4e5f\u53ef\u4ee5\u5339\u914d\u4e0d\u540c\u7c7b\u578b\u7684\u503c\u3002"]]],["pre",{lang:null,highlighted:'Model<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span>{ age<span class="token punctuation">:</span>{ <span class="token variable">$ne</span><span class="token punctuation">:</span><span class="token number">24</span>}}<span class="token punctuation">,</span><span class="token function">function</span><span class="token punctuation">(</span>error<span class="token punctuation">,</span>docs<span class="token punctuation">)</span>{\n<span class="token operator">/</span><span class="token operator">/</span>\u67e5\u8be2age\u4e0d\u7b49\u4e8e<span class="token number">24</span>\u7684\u6240\u6709\u6570\u636e\n}<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n \nModel<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span>{name<span class="token punctuation">:</span>{<span class="token variable">$ne</span><span class="token punctuation">:</span><span class="token string">"tom"</span>}<span class="token punctuation">,</span>age<span class="token punctuation">:</span>{<span class="token variable">$gte</span><span class="token punctuation">:</span><span class="token number">18</span>}}<span class="token punctuation">,</span><span class="token function">function</span><span class="token punctuation">(</span>error<span class="token punctuation">,</span>docs<span class="token punctuation">)</span>{\n<span class="token operator">/</span><span class="token operator">/</span>\u67e5\u8be2name\u4e0d\u7b49\u4e8etom\u3001age<span class="token operator">>=</span><span class="token number">18</span>\u7684\u6240\u6709\u6570\u636e\n}<span class="token punctuation">)</span>\uff1b'},["code",'Model.find({ age:{ $ne:24}},function(error,docs){\n//\u67e5\u8be2age\u4e0d\u7b49\u4e8e24\u7684\u6240\u6709\u6570\u636e\n});\n \nModel.find({name:{$ne:"tom"},age:{$gte:18}},function(error,docs){\n//\u67e5\u8be2name\u4e0d\u7b49\u4e8etom\u3001age>=18\u7684\u6240\u6709\u6570\u636e\n})\uff1b']],["h4","\u5339\u914d\u6761\u4ef6\u7b5b\u9009\u67e5\u8be2"],["ul",["li",["p","\u548c$ne\u64cd\u4f5c\u7b26\u76f8\u53cd\uff0c$in\u76f8\u5f53\u4e8e\u5305\u542b\u3001\u7b49\u4e8e\uff0c\u67e5\u8be2\u65f6\u67e5\u627e\u5305\u542b\u4e8e\u6307\u5b9a\u5b57\u6bb5\u6761\u4ef6\u7684\u6570\u636e\u3002"]]],["pre",{lang:null,highlighted:'Model<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span>{ age<span class="token punctuation">:</span>{ <span class="token variable">$in</span><span class="token punctuation">:</span> <span class="token number">20</span>}}<span class="token punctuation">,</span><span class="token function">function</span><span class="token punctuation">(</span>error<span class="token punctuation">,</span>docs<span class="token punctuation">)</span>{\n<span class="token operator">/</span><span class="token operator">/</span>\u67e5\u8be2age\u7b49\u4e8e<span class="token number">20</span>\u7684\u6240\u6709\u6570\u636e\n}<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n \n \nModel<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span>{ age<span class="token punctuation">:</span>{<span class="token variable">$in</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">]</span>}}<span class="token punctuation">,</span><span class="token function">function</span><span class="token punctuation">(</span>error<span class="token punctuation">,</span>docs<span class="token punctuation">)</span>{\n<span class="token operator">/</span><span class="token operator">/</span>\u53ef\u4ee5\u628a\u591a\u4e2a\u503c\u7ec4\u7ec7\u6210\u4e00\u4e2a\u6570\u7ec4\n<span class="token operator">/</span><span class="token operator">/</span>\u67e5\u8be2age\u4e3a<span class="token number">20</span>\u3001<span class="token number">30</span>\u7684\u6240\u6709\u6587\u6863\n}<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>'},["code","Model.find({ age:{ $in: 20}},function(error,docs){\n//\u67e5\u8be2age\u7b49\u4e8e20\u7684\u6240\u6709\u6570\u636e\n});\n \n \nModel.find({ age:{$in:[20,30]}},function(error,docs){\n//\u53ef\u4ee5\u628a\u591a\u4e2a\u503c\u7ec4\u7ec7\u6210\u4e00\u4e2a\u6570\u7ec4\n//\u67e5\u8be2age\u4e3a20\u300130\u7684\u6240\u6709\u6587\u6863\n});"]],["h4","\u6216\u8005\u6761\u4ef6\u7b5b\u9009\u67e5\u8be2"],["ul",["li",["p","$or\u64cd\u4f5c\u7b26\uff0c\u53ef\u4ee5\u67e5\u8be2\u591a\u4e2a\u952e\u503c\u7684\u4efb\u610f\u7ed9\u5b9a\u503c\uff0c\u53ea\u8981\u6ee1\u8db3\u5176\u4e2d\u4e00\u4e2a\u5c31\u53ef\u8fd4\u56de\uff0c\u7528\u4e8e\u5b58\u5728\u591a\u4e2a\u6761\u4ef6\u5224\u5b9a\u7684\u60c5\u51b5\u4e0b\u4f7f\u7528"]]],["pre",{lang:null,highlighted:'Model<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span>{<span class="token string">"$or"</span><span class="token punctuation">:</span><span class="token punctuation">[</span>{<span class="token string">"name"</span><span class="token punctuation">:</span><span class="token string">"yaya"</span>}<span class="token punctuation">,</span>{<span class="token string">"age"</span><span class="token punctuation">:</span><span class="token number">28</span>}<span class="token punctuation">]</span>}<span class="token punctuation">,</span><span class="token function">function</span><span class="token punctuation">(</span>error<span class="token punctuation">,</span>docs<span class="token punctuation">)</span>{\n<span class="token operator">/</span><span class="token operator">/</span>\u67e5\u8be2name\u4e3ayaya\u6216age\u4e3a<span class="token number">28</span>\u7684\u5168\u90e8\u6587\u6863\n}<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>'},["code",'Model.find({"$or":[{"name":"yaya"},{"age":28}]},function(error,docs){\n//\u67e5\u8be2name\u4e3ayaya\u6216age\u4e3a28\u7684\u5168\u90e8\u6587\u6863\n});']],["h4","\u5b58\u5728\u6761\u4ef6\u7b5b\u9009\u67e5\u8be2"],["ul",["li",["p","$exists\u64cd\u4f5c\u7b26\uff0c\u53ef\u7528\u4e8e\u5224\u65ad\u67d0\u4e9b\u5173\u952e\u5b57\u6bb5\u662f\u5426\u5b58\u5728\u6765\u8fdb\u884c\u6761\u4ef6\u67e5\u8be2"]]],["pre",{lang:null,highlighted:'Model<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span>{name<span class="token punctuation">:</span> {<span class="token variable">$exists</span><span class="token punctuation">:</span> <span class="token boolean">true</span>}}<span class="token punctuation">,</span><span class="token function">function</span><span class="token punctuation">(</span>error<span class="token punctuation">,</span>docs<span class="token punctuation">)</span>{\n<span class="token operator">/</span><span class="token operator">/</span>\u67e5\u8be2\u6240\u6709\u5b58\u5728name\u5c5e\u6027\u7684\u6587\u6863\n}<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n \nModel<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span>{telephone<span class="token punctuation">:</span> {<span class="token variable">$exists</span><span class="token punctuation">:</span> <span class="token boolean">false</span>}}<span class="token punctuation">,</span><span class="token function">function</span><span class="token punctuation">(</span>error<span class="token punctuation">,</span>docs<span class="token punctuation">)</span>{\n<span class="token operator">/</span><span class="token operator">/</span>\u67e5\u8be2\u6240\u6709\u4e0d\u5b58\u5728telephone\u5c5e\u6027\u7684\u6587\u6863\n}<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>'},["code","Model.find({name: {$exists: true}},function(error,docs){\n//\u67e5\u8be2\u6240\u6709\u5b58\u5728name\u5c5e\u6027\u7684\u6587\u6863\n});\n \nModel.find({telephone: {$exists: false}},function(error,docs){\n//\u67e5\u8be2\u6240\u6709\u4e0d\u5b58\u5728telephone\u5c5e\u6027\u7684\u6587\u6863\n});"]],["h3","Model\u4fdd\u5b58"],["ul",["li",["p","Model.create(\u6587\u6863\u6570\u636e, callback))"]]],["pre",{lang:null,highlighted:'  TestModel<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>{ name<span class="token punctuation">:</span><span class="token string">"model_create"</span><span class="token punctuation">,</span> age<span class="token punctuation">:</span><span class="token number">26</span>}<span class="token punctuation">,</span> <span class="token function">function</span><span class="token punctuation">(</span>error<span class="token punctuation">,</span>doc<span class="token punctuation">)</span>{\n  <span class="token function">if</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span> {\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n  } <span class="token keyword">else</span> {\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>doc<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n  }\n  }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>'},["code",'  TestModel.create({ name:"model_create", age:26}, function(error,doc){\n  if(error) {\n  console.log(error);\n  } else {\n  console.log(doc);\n  }\n  });']],["h4","Entity.\u4fdd\u5b58"],["ul",["li",["p","Entity.save(\u6587\u6863\u6570\u636e, callback))"]]],["pre",{lang:null,highlighted:'var TestEntity <span class="token operator">=</span> new TestModel <span class="token punctuation">(</span>{name<span class="token punctuation">:</span><span class="token string">"entity_save"</span><span class="token punctuation">,</span>age<span class="token punctuation">:</span> <span class="token number">27</span>}<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n \nTestEntity<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token function">function</span><span class="token punctuation">(</span>error<span class="token punctuation">,</span>doc<span class="token punctuation">)</span> {\n<span class="token function">if</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span> {\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n} <span class="token keyword">else</span> {\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>doc<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n}\n}<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>'},["code",'var TestEntity = new TestModel ({name:"entity_save",age: 27});\n \nTestEntity.save(function(error,doc) {\nif(error) {\nconsole.log(error);\n} else {\nconsole.log(doc);\n}\n});']],["h4","\u6570\u636e\u66f4\u65b0\uff1aobj.update(\u67e5\u8be2\u6761\u4ef6,\u66f4\u65b0\u5bf9\u8c61,callback);"],["pre",{lang:null,highlighted:'var conditions <span class="token operator">=</span> {name <span class="token punctuation">:</span> <span class="token string">\'test_update\'</span>}<span class="token comment" spellcheck="true">;</span>\n \nvar update <span class="token operator">=</span> {<span class="token variable">$set</span> <span class="token punctuation">:</span> { age <span class="token punctuation">:</span> <span class="token number">16</span> }}<span class="token comment" spellcheck="true">;</span>\n \nTestModel<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>conditions<span class="token punctuation">,</span> update<span class="token punctuation">,</span> <span class="token function">function</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>{\n<span class="token function">if</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span> {\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n} <span class="token keyword">else</span> {\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'Update success!\'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n}\n}<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>'},["code","var conditions = {name : 'test_update'};\n \nvar update = {$set : { age : 16 }};\n \nTestModel.update(conditions, update, function(error){\nif(error) {\nconsole.log(error);\n} else {\nconsole.log('Update success!');\n}\n});"]],["h4","\u5220\u9664\u6570\u636e\uff1aobj.remove(\u67e5\u8be2\u6761\u4ef6,callback);"],["pre",{lang:null,highlighted:'var conditions <span class="token operator">=</span> { name<span class="token punctuation">:</span> <span class="token string">\'tom\'</span> }<span class="token comment" spellcheck="true">;</span>\n \nTestModel<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>conditions<span class="token punctuation">,</span> <span class="token function">function</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>{\n<span class="token function">if</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span> {\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n} <span class="token keyword">else</span> {\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'Delete success!\'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n}\n}<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>'},["code","var conditions = { name: 'tom' };\n \nTestModel.remove(conditions, function(error){\nif(error) {\nconsole.log(error);\n} else {\nconsole.log('Delete success!');\n}\n});"]],["h3","\u6e38\u6807"],["p","\u6570\u636e\u5e93\u4f7f\u7528\u6e38\u6807\u8fd4\u56defind\u7684\u6267\u884c\u7ed3\u679c\u3002\u5ba2\u6237\u7aef\u5bf9\u6e38\u6807\u7684\u5b9e\u73b0\u901a\u5e38\u80fd\u591f\u5bf9\u6700\u7ec8\u7ed3\u679c\u8fdb\u884c\u6709\u6548\u7684\u63a7\u5236\u3002\u53ef\u4ee5\u9650\u5236\u7ed3\u679c\u7684\u6570\u91cf\uff0c\u7565\u8fc7\u90e8\u5206\u7ed3\u679c\uff0c\u6839\u636e\u4efb\u610f\u952e\u6309\u4efb\u610f\u987a\u5e8f\u7684\u7ec4\u5408\u5bf9\u7ed3\u679c\u8fdb\u884c\u5404\u79cd\u6392\u5e8f\uff0c\u6216\u8005\u662f\u6267\u884c\u5176\u4ed6\u4e00\u4e9b\u5f3a\u7684\u64cd\u4f5c\u3002\n\u6700\u5e38\u7528\u7684\u67e5\u8be2\u9009\u9879\u5c31\u662f\u9650\u5236\u8fd4\u56de\u7ed3\u679c\u7684\u6570\u91cf(limit\u51fd\u6570)\u3001\u5ffd\u7565\u4e00\u70b9\u6570\u91cf\u7684\u7ed3\u679c(skip\u51fd\u6570)\u4ee5\u53ca\u6392\u5e8f(sort\u51fd\u6570)\u3002\u6240\u6709\u8fd9\u4e9b\u9009\u9879\u4e00\u70b9\u8981\u5728\u67e5\u8be2\u88ab\u53d1\u9001\u5230\u670d\u52a1\u5668\u4e4b\u524d\u6307\u5b9a\u3002"],["h4","\u9650\u5236\u8fd4\u56de\u6570\u91cf(limit\u51fd\u6570): find(Conditions,fields,options,callback);"],["p","\u5728\u67e5\u8be2\u64cd\u4f5c\u4e2d\uff0c\u6709\u65f6\u6570\u636e\u91cf\u4f1a\u5f88\u5927\uff0c\u8fd9\u65f6\u6211\u4eec\u5c31\u9700\u8981\u5bf9\u8fd4\u56de\u7ed3\u679c\u7684\u6570\u91cf\u8fdb\u884c\u9650\u5236\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528limit\u51fd\u6570\uff0c\u901a\u8fc7\u5b83\u6765\u9650\u5236\u7ed3\u679c\u6570\u91cf\u3002"],["pre",{lang:null,highlighted:' Model<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span>{}<span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">,</span>{limit<span class="token punctuation">:</span><span class="token number">20</span>}<span class="token punctuation">,</span><span class="token function">function</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span>docs<span class="token punctuation">)</span>{\n     console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>docs<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>'},["code"," Model.find({},null,{limit:20},function(err,docs){\n     console.log(docs);\n });"]],["p","\u5982\u679c\u5339\u914d\u7684\u7ed3\u679c\u4e0d\u523020\u4e2a\uff0c\u5219\u8fd4\u56de\u5339\u914d\u6570\u91cf\u7684\u7ed3\u679c\uff0c\u4e5f\u5c31\u662f\u8bf4limit\u51fd\u6570\u6307\u5b9a\u7684\u662f\u4e0a\u9650\u800c\u975e\u4e0b\u9650\u3002"],["h4","\u8df3\u8fc7\u7ed3\u679c\u6570\u91cf(skip\u51fd\u6570)\uff1afind(Conditions,fields,options,callback);"],["p","skip\u51fd\u6570\u548climit\u7c7b\u4f3c\uff0c\u90fd\u662f\u5bf9\u8fd4\u56de\u7ed3\u679c\u6570\u91cf\u8fdb\u884c\u64cd\u4f5c\uff0c\u4e0d\u540c\u7684\u662fskip\u51fd\u6570\u7684\u529f\u80fd\u662f\u7565\u8fc7\u6307\u5b9a\u6570\u91cf\u7684\u5339\u914d\u7ed3\u679c\uff0c\u8fd4\u56de\u4f59\u4e0b\u7684\u67e5\u8be2\u7ed3\u679c"],["pre",{lang:null,highlighted:' Model<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span>{}<span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">,</span>{skip<span class="token punctuation">:</span><span class="token number">4</span>}<span class="token punctuation">,</span><span class="token function">function</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span>docs<span class="token punctuation">)</span>{\n     console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>docs<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>'},["code"," Model.find({},null,{skip:4},function(err,docs){\n     console.log(docs);\n });"]],["p","\u5982\u679c\u67e5\u8be2\u7ed3\u679c\u6570\u91cf\u4e2d\u5c11\u4e8e4\u4e2a\u7684\u8bdd\uff0c\u5219\u4e0d\u4f1a\u8fd4\u56de\u4efb\u4f55\u7ed3\u679c\u3002"],["h4","\u6392\u5e8f(sort\u51fd\u6570): find(Conditions,fields,options,callback);"],["p","sort\u51fd\u6570\u53ef\u4ee5\u5c06\u67e5\u8be2\u7ed3\u679c\u6570\u636e\u8fdb\u884c\u6392\u5e8f\u64cd\u4f5c\uff0c\u8be5\u51fd\u6570\u7684\u53c2\u6570\u662f\u4e00\u4e2a\u6216\u591a\u4e2a\u952e/\u503c\u5bf9\uff0c\u952e\u4ee3\u8868\u8981\u6392\u5e8f\u7684\u952e\u540d\uff0c\u503c\u4ee3\u8868\u6392\u5e8f\u7684\u65b9\u5411\uff0c1\u662f\u5347\u5e8f\uff0c-1\u662f\u964d\u5e8f\u3002"],["pre",{lang:null,highlighted:' Model<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span>{}<span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">,</span>{sort<span class="token punctuation">:</span>{age<span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span>}}<span class="token punctuation">,</span><span class="token function">function</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span>docs<span class="token punctuation">)</span>{\n   <span class="token operator">/</span><span class="token operator">/</span>\u67e5\u8be2\u6240\u6709\u6570\u636e\uff0c\u5e76\u6309\u7167age\u964d\u5e8f\u987a\u5e8f\u8fd4\u56de\u6570\u636edocs\n }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>'},["code"," Model.find({},null,{sort:{age:-1}},function(err,docs){\n   //\u67e5\u8be2\u6240\u6709\u6570\u636e\uff0c\u5e76\u6309\u7167age\u964d\u5e8f\u987a\u5e8f\u8fd4\u56de\u6570\u636edocs\n });"]],["p","sort\u51fd\u6570\u53ef\u6839\u636e\u7528\u6237\u81ea\u5b9a\u4e49\u6761\u4ef6\u6709\u9009\u62e9\u6027\u7684\u6765\u8fdb\u884c\u6392\u5e8f\u663e\u793a\u6570\u636e\u7ed3\u679c"],["h4","ObjectId\u7b80\u8ff0"],["p","\u5b58\u50a8\u5728mongodb\u96c6\u5408\u4e2d\u7684\u6bcf\u4e2a\u6587\u6863\uff08document\uff09\u90fd\u6709\u4e00\u4e2a\u9ed8\u8ba4\u7684\u4e3b\u952e_id\uff0c\u8fd9\u4e2a\u4e3b\u952e\u540d\u79f0\u662f\u56fa\u5b9a\u7684\uff0c\u5b83\u53ef\u4ee5\u662fmongodb\u652f\u6301\u7684\u4efb\u4f55\u6570\u636e\u7c7b\u578b\uff0c\u9ed8\u8ba4\u662fObjectId\u3002\u8be5\u7c7b\u578b\u7684\u503c\u7531\u7cfb\u7edf\u81ea\u5df1\u751f\u6210\uff0c\u4ece\u67d0\u79cd\u610f\u4e49\u4e0a\u51e0\u4e4e\u4e0d\u4f1a\u91cd\u590d\uff0c\u751f\u6210\u8fc7\u7a0b\u6bd4\u8f83\u590d\u6742\uff0c\u6709\u5174\u8da3\u7684\u670b\u53cb\u53ef\u4ee5\u67e5\u770b\u6e90\u7801\u3002\n\u4f7f\u7528\u8fc7MySQL\u7b49\u5173\u7cfb\u578b\u6570\u636e\u5e93\u7684\u53cb\u53cb\u4eec\u90fd\u77e5\u9053\uff0c\u4e3b\u952e\u90fd\u662f\u8bbe\u7f6e\u6210\u81ea\u589e\u7684\u3002\u4f46\u5728\u5206\u5e03\u5f0f\u73af\u5883\u4e0b\uff0c\u8fd9\u79cd\u65b9\u6cd5\u5c31\u4e0d\u53ef\u884c\u4e86\uff0c\u4f1a\u4ea7\u751f\u51b2\u7a81\u3002\u4e3a\u6b64\uff0cMongoDB\u91c7\u7528\u4e86\u4e00\u4e2a\u79f0\u4e4b\u4e3aObjectId\u7684\u7c7b\u578b\u6765\u505a\u4e3b\u952e\u3002ObjectId\u662f\u4e00\u4e2a12\u5b57\u8282\u7684 BSON \u7c7b\u578b\u5b57\u7b26\u4e32\u3002\u6309\u7167\u5b57\u8282\u987a\u5e8f\uff0c\u4e00\u6b21\u4ee3\u8868\uff1a\n4\u5b57\u8282\uff1aUNIX\u65f6\u95f4\u6233\n3\u5b57\u8282\uff1a\u8868\u793a\u8fd0\u884cMongoDB\u7684\u673a\u5668\n2\u5b57\u8282\uff1a\u8868\u793a\u751f\u6210\u6b64_id\u7684\u8fdb\u7a0b\n3\u5b57\u8282\uff1a\u7531\u4e00\u4e2a\u968f\u673a\u6570\u5f00\u59cb\u7684\u8ba1\u6570\u5668\u751f\u6210\u7684\u503c"],["pre",{lang:null,highlighted:'var mongoose <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'mongoose\'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\nvar tSchema <span class="token operator">=</span> new mongoose<span class="token punctuation">.</span><span class="token function">Schema</span><span class="token punctuation">(</span>{}<span class="token punctuation">)</span><span class="token comment" spellcheck="true">; //\u9ed8\u8ba4_id:ObjectId\u7c7b\u578b</span>'},["code","var mongoose = require('mongoose');\n\nvar tSchema = new mongoose.Schema({}); //\u9ed8\u8ba4_id:ObjectId\u7c7b\u578b"]],["p","\u6bcf\u4e00\u4e2a\u6587\u6863\u90fd\u6709\u4e00\u4e2a\u7279\u6b8a\u7684\u952e\u201c_id\u201d\uff0c\u8fd9\u4e2a\u952e\u5728\u6587\u6863\u6240\u5c5e\u7684\u96c6\u5408\u4e2d\u662f\u552f\u4e00\u7684\u3002"],["h4","Schema\u6dfb\u52a0\u5c5e\u6027\u503c"],["p","\u524d\u9762\u6211\u4eec\u5df2\u7ecf\u8bb2\u8ff0\u4e86\u5982\u4f55\u5b9a\u4e49\u4e00\u4e2aSchema\u5e76\u8d4b\u4e88\u67d0\u4e9b\u5c5e\u6027\u503c,\u90a3\u80fd\u4e0d\u80fd\u5148\u5b9a\u4e49\u540e\u6dfb\u52a0\u5c5e\u6027\u5462\uff0c\u7b54\u6848\u662f\u53ef\u4ee5\u7684"],["pre",{lang:null,highlighted:'var mongoose <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'mongoose\'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\nvar TempSchema <span class="token operator">=</span> new mongoose<span class="token punctuation">.</span>Schema<span class="token comment" spellcheck="true">;</span>\n\nTempSchema<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>{ name<span class="token punctuation">:</span> <span class="token string">\'String\'</span><span class="token punctuation">,</span> email<span class="token punctuation">:</span> <span class="token string">\'String\'</span><span class="token punctuation">,</span> age<span class="token punctuation">:</span> <span class="token string">\'Number\'</span> }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>'},["code","var mongoose = require('mongoose');\n\nvar TempSchema = new mongoose.Schema;\n\nTempSchema.add({ name: 'String', email: 'String', age: 'Number' });"]],["h4","\u5b9e\u4f8b\u65b9\u6cd5"],["p","\u6709\u7684\u65f6\u5019\uff0c\u6211\u4eec\u521b\u9020\u7684Schema\u4e0d\u4ec5\u8981\u4e3a\u540e\u9762\u7684Model\u548cEntity\u63d0\u4f9b\u516c\u5171\u7684\u5c5e\u6027\uff0c\u8fd8\u8981\u63d0\u4f9b\u516c\u5171\u7684\u65b9\u6cd5.\u90a3\u600e\u4e48\u5728Schema\u4e0b\u521b\u5efa\u4e00\u4e2a\u5b9e\u4f8b\u65b9\u6cd5\u5462"],["pre",{lang:null,highlighted:'var mongoose <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'mongoose\'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\nvar saySchema <span class="token operator">=</span> new mongoose<span class="token punctuation">.</span><span class="token function">Schema</span><span class="token punctuation">(</span>{name <span class="token punctuation">:</span> String}<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\nsaySchema<span class="token punctuation">.</span><span class="token function">method</span><span class="token punctuation">(</span><span class="token string">\'say\'</span><span class="token punctuation">,</span> function <span class="token punctuation">(</span><span class="token punctuation">)</span> {\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'Trouble Is A Friend\'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n}<span class="token punctuation">)</span>\n\nvar say <span class="token operator">=</span> mongoose<span class="token punctuation">.</span><span class="token function">model</span><span class="token punctuation">(</span><span class="token string">\'say\'</span><span class="token punctuation">,</span> saySchema<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\nvar lenka <span class="token operator">=</span> new <span class="token function">say</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\nlenka<span class="token punctuation">.</span><span class="token function">say</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">; //Trouble Is A Friend</span>'},["code","var mongoose = require('mongoose');\n\nvar saySchema = new mongoose.Schema({name : String});\n\nsaySchema.method('say', function () {\nconsole.log('Trouble Is A Friend');\n})\n\nvar say = mongoose.model('say', saySchema);\n\nvar lenka = new say();\n\nlenka.say(); //Trouble Is A Friend"]],["h4","\u4e3aSchema\u521b\u5efa\u9759\u6001\u65b9\u6cd5"],["pre",{lang:null,highlighted:'var mongoose <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"mongoose"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\nvar db <span class="token operator">=</span> mongoose<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token string">"mongodb://127.0.0.1:27017/test"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\nvar TestSchema <span class="token operator">=</span> new mongoose<span class="token punctuation">.</span><span class="token function">Schema</span><span class="token punctuation">(</span>{\nname <span class="token punctuation">:</span> { type<span class="token punctuation">:</span>String }<span class="token punctuation">,</span>\nage <span class="token punctuation">:</span> { type<span class="token punctuation">:</span>Number<span class="token punctuation">,</span> <span class="token keyword">default</span><span class="token punctuation">:</span><span class="token number">0</span> }<span class="token punctuation">,</span>\nemail<span class="token punctuation">:</span> { type<span class="token punctuation">:</span>String<span class="token punctuation">,</span> <span class="token keyword">default</span><span class="token punctuation">:</span><span class="token string">""</span> }<span class="token punctuation">,</span>\ntime <span class="token punctuation">:</span> { type<span class="token punctuation">:</span>Date<span class="token punctuation">,</span> <span class="token keyword">default</span><span class="token punctuation">:</span>Date<span class="token punctuation">.</span>now }\n}<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\nTestSchema<span class="token punctuation">.</span><span class="token function">static</span><span class="token punctuation">(</span><span class="token string">\'findByName\'</span><span class="token punctuation">,</span> function <span class="token punctuation">(</span>name<span class="token punctuation">,</span> callback<span class="token punctuation">)</span> {\nreturn this<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span>{ name<span class="token punctuation">:</span> name }<span class="token punctuation">,</span> callback<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n}<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\nvar TestModel <span class="token operator">=</span> db<span class="token punctuation">.</span><span class="token function">model</span><span class="token punctuation">(</span><span class="token string">"test1"</span><span class="token punctuation">,</span> TestSchema <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\nTestModel<span class="token punctuation">.</span><span class="token function">findByName</span><span class="token punctuation">(</span><span class="token string">\'tom\'</span><span class="token punctuation">,</span> function <span class="token punctuation">(</span>err<span class="token punctuation">,</span> docs<span class="token punctuation">)</span> {\n<span class="token operator">/</span><span class="token operator">/</span>docs\u6240\u6709\u540d\u5b57\u53ebtom\u7684\u6587\u6863\u7ed3\u679c\u96c6\n}<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>'},["code",'var mongoose = require("mongoose");\n\nvar db = mongoose.connect("mongodb://127.0.0.1:27017/test");\n\nvar TestSchema = new mongoose.Schema({\nname : { type:String },\nage : { type:Number, default:0 },\nemail: { type:String, default:"" },\ntime : { type:Date, default:Date.now }\n});\n\nTestSchema.static(\'findByName\', function (name, callback) {\nreturn this.find({ name: name }, callback);\n});\n\nvar TestModel = db.model("test1", TestSchema );\n\nTestModel.findByName(\'tom\', function (err, docs) {\n//docs\u6240\u6709\u540d\u5b57\u53ebtom\u7684\u6587\u6863\u7ed3\u679c\u96c6\n});']],["h4","\u4e3aSchema\u6a21\u578b\u8ffd\u52a0\u65b9\u6cd5"],["p","\u4e3aSchema\u6a21\u578b\u8ffd\u52a0speak\u65b9\u6cd5"],["pre",{lang:null,highlighted:'var mongoose <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"mongoose"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\nvar db <span class="token operator">=</span> mongoose<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token string">"mongodb://127.0.0.1:27017/test"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\nvar TestSchema <span class="token operator">=</span> new mongoose<span class="token punctuation">.</span><span class="token function">Schema</span><span class="token punctuation">(</span>{\nname <span class="token punctuation">:</span> { type<span class="token punctuation">:</span>String }<span class="token punctuation">,</span>\nage <span class="token punctuation">:</span> { type<span class="token punctuation">:</span>Number<span class="token punctuation">,</span> <span class="token keyword">default</span><span class="token punctuation">:</span><span class="token number">0</span> }<span class="token punctuation">,</span>\nemail<span class="token punctuation">:</span> { type<span class="token punctuation">:</span>String<span class="token punctuation">,</span> <span class="token keyword">default</span><span class="token punctuation">:</span><span class="token string">""</span> }<span class="token punctuation">,</span>\ntime <span class="token punctuation">:</span> { type<span class="token punctuation">:</span>Date<span class="token punctuation">,</span> <span class="token keyword">default</span><span class="token punctuation">:</span>Date<span class="token punctuation">.</span>now }\n}<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\nTestSchema<span class="token punctuation">.</span>methods<span class="token punctuation">.</span>speak <span class="token operator">=</span> <span class="token function">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span>{\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'\u6211\u7684\u540d\u5b57\u53eb\'</span><span class="token operator">+</span>this<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n}\n\nvar TestModel <span class="token operator">=</span> db<span class="token punctuation">.</span><span class="token function">model</span><span class="token punctuation">(</span><span class="token string">\'test1\'</span><span class="token punctuation">,</span>TestSchema<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\nvar TestEntity <span class="token operator">=</span> new <span class="token function">TestModel</span><span class="token punctuation">(</span>{name<span class="token punctuation">:</span><span class="token string">\'Lenka\'</span>}<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>\n\nTestEntity<span class="token punctuation">.</span><span class="token function">speak</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;//\u6211\u7684\u540d\u5b57\u53ebLenka</span>'},["code","var mongoose = require(\"mongoose\");\n\nvar db = mongoose.connect(\"mongodb://127.0.0.1:27017/test\");\n\nvar TestSchema = new mongoose.Schema({\nname : { type:String },\nage : { type:Number, default:0 },\nemail: { type:String, default:\"\" },\ntime : { type:Date, default:Date.now }\n});\n\nTestSchema.methods.speak = function(){\nconsole.log('\u6211\u7684\u540d\u5b57\u53eb'+this.name);\n}\n\nvar TestModel = db.model('test1',TestSchema);\n\nvar TestEntity = new TestModel({name:'Lenka'});\n\nTestEntity.speak();//\u6211\u7684\u540d\u5b57\u53ebLenka"]]],meta:{title:"mongoose",publishDate:"2018-12-06T00:00:00.000Z",abstract:"mongoose",filename:"posts/category1/mongodb&mongoose/mongoose.md"}}}});